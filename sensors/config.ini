;; Review all values before using

;; After modifying any values in this file, run the following command:
;; sudo systemctl restart terrarium-monitor.target

[DEFAULT]
;; All values in this section can be overriden for each individual sensor
;; by adding a line with the same variable name in their respective section

; Time to turn lights on and off - only on the hour and using 24-hour clock
LightsOnTime = 9
LightsOffTime = 21
; Whether or not to enable cooling system
Cooling = false
; Whether to cool the reservoir during the day (when lights are on). Only applies if Cooling is set to True.
DayCooling = false
; Number hours to offset night cooling from light on/off times
CoolingTimeOffset = 1
; URL of Discord Webhook used for alerts
WebhookURL = YOUR-URL-HERE
; IP address of cooling unit Kasa Plug
CoolerPlugIP = COOLER-IP-HERE
; IP addresss of cooling reservoir pump Kasa plug
CoolingPumpIP = PUMP-IP-HERE

;; InfluxDB Values Below
; Influxdb Server Address - do not change if InfluxDB is running on the same device
IP = 127.0.0.1
; Default port - should not need to be changed
Port = 8086
; InfluxDB username and password for client
User = INFLUX-USERNAME-HERE
Password = INFLUX-PASSWORD-HERE
; Database created for this device
DatabaseName = sensor_data
; Location of sensors
Location = Terrarium

[Highland]
; URL of Discord Webhook used for alerts (leave blank if using Default)
WebhookURL =
; Unique table name for data generated by this sensor
DatatypeName = rpi-HTU31D-HL
; How often to report readings (seconds)
ReadingInterval = 15
; Minimum humidity level (%) before sending alert
MinHumidityAlert = 80
; Percent (%) above minimum humidity level when alert counter will be reset
AlertHumidityThreshold = 5
; Minimum temperature before sending alert (°F)
AlertMinTemp = 58
; Maximum temperature before sending alert (°F)
AlertMaxTemp = 78
; Degrees (°F) above/below temperature alert levels when alert counter will be reset
AlertTempThreshold = 3
; How many notifications to receive each time humidity falls outside acceptable levels
MaxNotificationsHumidity = 99
; Time between sending another humidity notification (minutes) (may not be exact)
NotificationIntervalHumidity = 20
; How many notifications to receive each time temperature falls outside acceptable levels
MaxNotificationsTemp = 99
; Time between sending another temperature notification (minutes) (may not be exact)
NotificationIntervalTemp = 20
; Target temperature when lights are on
DayTargetTemp = 72
; Target temperature when lights are off
NightTargetTemp = 62
; Degrees above target temp before activating cooling pump
TargetTempThreshold = 2

[Lowland]
; URL of Discord Webhook used for alerts (leave blank if using Default)
WebhookURL =
; Unique table name for data generated by this sensor
DatatypeName = rpi-HTU31D-LL
; How often to report averaged readings (seconds)
ReadingInterval = 15
; Minimum humidity level (%) before sending alert
MinHumidityAlert = 60
; Percent (%) above minimum humidity level when alert counter will be reset
AlertHumidityThreshold = 5
; Minimum temperature before sending alert (°F)
AlertMinTemp = 65
; Maximum temperature before sending alert (°F)
AlertMaxTemp = 95
; Degrees (°F) above/below temperature alert levels when alert counter will be reset
AlertTempThreshold = 5
; How many notifications to receive each time humidity or temperature falls outside acceptable levels
MaxNotificationsHumidity = 10
; Time between sending another humidity notification (minutes) (may not be exact)
NotificationIntervalHumidity = 60
; How many notifications to receive each time temperature falls outside acceptable levels
MaxNotificationsTemp = 10
; Time between sending another temperature notification (minutes) (may not be exact)
NotificationIntervalTemp = 60

[DS18B20-Cooler]
; URL of Discord Webhook used for alerts (leave blank if using Default)
WebhookURL =
; Unique table name for data generated by this sensor
DatatypeName = rpi-DS18B20-Cooler
; Max amount of time (minutes) before alert sent if not hitting target temperature (off_temp). Set to -1 to disable.
CoolingAlertTime = 30
; Time between readings (seconds)
ReadingInterval = 60
; Temp (F) to turn Kasa plug off - reservoir target temperature - set to above ~35 degrees
OffTemp = 45
; Temp (F) to turn Kasa plug back on - set this a few degrees above off_temp
OnTemp = 50
; Minimum temperature before sending alert (F). Should be set between 32 and off_temp.
AlertBelowTemp = 35
; Degrees F above AlertBelowTemp when alert counter will be reset
AlertResetThreshold = 2
; How many notifications to receive each time temperature falls below minimum level
MaxNotifications = 10
; Time between sending another notification (minutes) (may not be exact)
NotificationInterval = 30

[HCSR04-Humidifier]
; URL of Discord Webhook used for alerts (leave blank if using Default)
WebhookURL =
; Unique table name for data generated by this sensor
DatatypeName = rpi-HCSR04-Humidifier
; GPIO pin numbers on Pi that sensor is connected to
TriggerPin = 17
EchoPin = 27
; Distance from reservoir base to max fill line (inches)
MaxHeight = HEIGHT-HERE
; Distance of sensor above max fill line (inches-decimal)
SensorHeight = HEIGHT-HERE
; How often to report averaged readings (minutes)
ReadingInterval = 5
; Number of samples to average per cumulative reading. Fewer samples results in reduced accuracy.
Samples = 30
; Percent (%) full level at which to send refill alert
RefillLevel = 20
; Percent (%) full level at which to reset alerts - must be offset significantly from RefillLevel due to reading variability.
FilledLevel = 50
; Maximum number of alert messages to send before stopping
MaxNotifications = 10
; Number of minutes between refill alert messages
NotificationInterval = 90
